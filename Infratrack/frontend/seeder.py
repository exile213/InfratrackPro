from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from django.utils import timezone
from frontend.models import Agency, IssueType, RoadType, Report

import random

class Command(BaseCommand):
    help = 'Seed database with test data'

    def handle(self, *args, **kwargs):
        self.stdout.write("üîÅ Seeding...")

        # Clear old test data
        User.objects.exclude(is_superuser=True).delete()
        Agency.objects.all().delete()
        IssueType.objects.all().delete()
        RoadType.objects.all().delete()
        Report.objects.all().delete()

        # Agencies
        agencies = [
            Agency.objects.create(name='DPWH', abbreviation='DPWH'),
            Agency.objects.create(name='City Engineering Office', abbreviation='CEO'),
        ]
        self.stdout.write("‚úÖ Agencies created.")

        # Issue Types
        issue_names = ['Pothole', 'Drainage Blockage', 'Faded Markings', 'Broken Signage']
        issue_types = [IssueType.objects.create(name=issue) for issue in issue_names]
        self.stdout.write("‚úÖ Issue types created.")

        # Road Types
        road_names = ['Concrete', 'Asphalt', 'Gravel']
        road_types = [RoadType.objects.create(name=road) for road in road_names]
        self.stdout.write("‚úÖ Road types created.")

        # Users (linked to agencies logically)
        usernames = ['dpwh_john', 'ceo_maria']
        emails = ['john@dpwh.gov.ph', 'maria@ceo.gov.ph']
        passwords = ['password123', 'password123']

        users = []
        for i in range(2):
            user = User.objects.create_user(
                username=usernames[i],
                email=emails[i],
                password=passwords[i],
                first_name=usernames[i].split('_')[1].capitalize()
            )
            users.append(user)
        self.stdout.write("‚úÖ Users created.")

        # Reports
        locations = ['Brgy. San Jose', 'Narra St.', 'Main Ave', 'Pine Rd.', 'Zone 4']
        for _ in range(10):
            Report.objects.create(
                location=random.choice(locations),
                issue_type=random.choice(issue_types),
                road_type=random.choice(road_types),
                description='This is a test report generated by seed script.',
                reported_by=random.choice(users),
                status=random.choice(['pending', 'in_progress', 'resolved']),
                date_reported=timezone.now()
            )
        self.stdout.write("‚úÖ Reports created.")

        self.stdout.write(self.style.SUCCESS("üå± Database seeding completed!"))
